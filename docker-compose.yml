version: '3.8'
services:
  nginx:
    build:
      context: ./nginx
    image: playarea2/nginx
    hostname: nginx
    container_name: nginx
    restart: on-failure
    environment:
      - TZ=Europe/Berlin
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
    depends_on:
      - vue
      - fastapi
    networks:
      playarea2-nw:
        ipv4_address: 192.17.10.10

  vue:
    build:
      context: ./vue/docker
    image: playarea2/vue
    container_name: vue
    hostname: vue
    restart: always
    depends_on:
      - fastapi
    healthcheck:
      test: 'curl -f http://localhost:8080 -k'
      interval: 30s
      timeout: 5s
      retries: 5
    ports:
      - '8080:8080'
      - '8081:8081'
    volumes:
      - ./vue/src-frontend/:/app
    environment:
      - TZ=Europe/Berlin
    env_file:
      - ./vue/src-frontend/.env
    networks:
      playarea2-nw:
        ipv4_address: 192.17.10.20
    command: 'npm run dev -- --host 0.0.0.0 --port 8080'

  fastapi:
    build:
      context: ./fastapi/docker/
      target: dev
    image: playarea2/fastapi
    hostname: fastapi
    container_name: fastapi
    restart: on-failure
    ports:
      - '8000:8000'
      - '8001:8001'
    environment:
      - TZ=Europe/Berlin
    env_file:
      - ./fastapi/src-backend/.env
    healthcheck:
      test: curl -f http://localhost:8000 -k
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      playarea2-nw:
        ipv4_address: 192.17.10.30
    volumes:
      - ./fastapi/src-backend/:/app
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn --reload --reload-dir /app/api --host 0.0.0.0 --port 8000 --log-level "error" "api.main:app"

  postgres:
    build:
      context: ./postgres/docker
    image: playarea2/postgres
    hostname: postgres
    container_name: postgres
    restart: on-failure
    ports:
      - '5432:5432'
    environment:
      - TZ=Europe/Berlin
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - playarea2-pgdata:/var/lib/postgresql/data
    networks:
      playarea2-nw:
        ipv4_address: 192.17.10.40

networks:
  playarea2-nw:
    name: playarea2-nw
    ipam:
      driver: default
      config:
        - subnet: '192.17.10.0/24'

volumes:
  playarea2-pgdata: {}
